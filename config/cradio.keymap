// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
// #include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <199>;
            quick-tap-ms = <100>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 12>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
        };

        window_change_language {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <32 31>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <23 22>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <27 26>;
        };

        capsword {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W           &kp E        &kp R             &kp T          &kp Y                 &kp U              &kp I            &kp O              &kp P
&kp A           &kp S           &kp D        &kp F             &kp G          &kp H                 &kp J              &kp K            &kp L              &kp SEMICOLON
&ht LEFT_GUI Z  &ht LEFT_ALT X  &ht LCTRL C  &ht LEFT_SHIFT V  &kp B          &kp N                 &ht RIGHT_SHIFT M  &ht LCTRL COMMA  &ht RIGHT_ALT DOT  &ht RIGHT_GUI FSLH
                                             &mo 1             &lt 4 SPACE    &mt LEFT_SHIFT ENTER  &mo 2
            >;
        };

        left_layer {
            bindings = <
&kp INSERT  &kp HOME   &kp UP_ARROW  &kp END    &kp PAGE_UP      &kp LEFT_SHIFT    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PRINTSCREEN
&kp DELETE  &kp LEFT   &kp DOWN      &kp RIGHT  &kp PAGE_DOWN    &kp LEFT_CONTROL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SCROLLLOCK
&kp LC(Z)   &kp LC(X)  &kp LC(C)     &kp LC(V)  &kp LC(Y)        &trans            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PAUSE_BREAK
                                     &trans     &trans           &kp NUMBER_0      &trans
            >;
        };

        right_layer {
            bindings = <
&kp GRAVE        &kp LESS_THAN  &kp GREATER_THAN  &kp AT_SIGN  &kp HASH          &kp AMPERSAND  &kp SQT            &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
&kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL    &kp UNDERSCORE    &kp TILDE      &kp DOUBLE_QUOTES  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp COLON
&trans           &kp SLASH      &kp ASTERISK      &kp CARET    &kp PERCENT       &kp PIPE       &kp DOLLAR         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp RCTRL
                                                  &trans       &trans            &trans         &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans        &trans        &trans        &trans            &trans  &kp F7  &kp F8  &kp F9  &kp F10
&bootloader  &bt BT_SEL 3  &bt BT_SEL 4  &trans        &trans            &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans            &trans  &kp F1  &kp F2  &kp F3  &kp F12
                                         &trans        &bt BT_CLR_ALL    &trans  &trans
            >;
        };

        mouse_layer {
            bindings = <
&mkp MB4  &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP      &msc SCRL_UP    &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &mkp MB4
&mkp MB5  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MCLK         &mkp MCLK       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp MB5
&trans    &trans          &trans          &trans           &msc SCRL_DOWN    &msc SCRL_DOWN  &trans          &trans          &trans           &trans
                                          &trans           &trans            &trans          &trans
            >;
        };
    };
};
