// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include <dt-bindings/zmk/mouse.h>


/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            require-prior-idle-ms = <0>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 17>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    macros {
        sel_word: sel_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(RIGHT_ARROW) &kp LC(LEFT_ARROW) &kp LC(LS(RIGHT_ARROW))>;
            label = "SEL_WORD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W           &kp E        &kp R             &kp T        &kp Y      &kp U              &kp I            &kp O              &kp P
&kp A           &kp S           &kp D        &kp F             &kp G        &kp H      &kp J              &kp K            &kp L              &kp SEMICOLON
&ht LEFT_GUI Z  &ht LEFT_ALT X  &ht LCTRL C  &ht LEFT_SHIFT V  &lt 4 B      &kp N      &ht RIGHT_SHIFT M  &ht LCTRL COMMA  &ht RIGHT_ALT DOT  &ht RIGHT_GUI FSLH
                                             &mo 1             &kp SPACE    &kp ENTER  &mo 2
            >;
        };

        left_layer {
            bindings = <
&kp INSERT  &kp HOME   &kp UP_ARROW  &kp END    &kp PAGE_UP      &kp LEFT_SHIFT    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
&kp DELETE  &kp LEFT   &kp DOWN      &kp RIGHT  &kp PAGE_DOWN    &kp LEFT_CONTROL  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&kp LC(Z)   &kp LC(X)  &kp LC(C)     &kp LC(V)  &sel_word        &trans            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
                                     &trans     &trans           &kp NUMBER_0      &trans
            >;
        };

        right_layer {
            bindings = <
&trans           &kp LESS_THAN  &kp GREATER_THAN  &kp AT_SIGN  &kp UNDERSCORE    &kp AMPERSAND  &kp GRAVE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
&kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL    &kp HASH          &kp TILDE      &kp COLON   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SINGLE_QUOTE
&kp CARET        &kp SLASH      &kp ASTERISK      &kp CARET    &kp PERCENT       &kp PIPE       &kp DOLLAR  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT_SIGN
                                                  &trans       &kp ESC           &trans         &trans
            >;
        };

        tri_layer {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &trans    &trans      &trans        &trans        &trans        &sys_reset
&kp F5  &kp F6   &kp F7   &kp F8   &trans    &trans      &bt BT_SEL 3  &bt BT_SEL 4  &trans        &bootloader
&kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans
                          &trans   &trans    &bt BT_CLR  &trans
            >;
        };

        mouse_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MCLK  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans     &trans
            >;
        };
    };
};
